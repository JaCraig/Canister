{
  "source_base_path": "/home/runner/work/Canister/Canister/docfx_project",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      }
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.Interfaces.ICanisterConfiguration.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.Interfaces.ICanisterConfiguration.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.Interfaces.ICanisterConfiguration",
      "Summary": "<p sourcefile=\"api/Canister.Interfaces.ICanisterConfiguration.yml\" sourcestartlinenumber=\"1\">Defines the contract for configuring Canister by specifying which assemblies to include for\ndependency injection and service registration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.Interfaces.IModule.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.Interfaces.IModule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.Interfaces.IModule",
      "Summary": "<p sourcefile=\"api/Canister.Interfaces.IModule.yml\" sourcestartlinenumber=\"1\">Represents a module that can be loaded into the IoC container. Implementations define\nservice registrations and their order.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.Interfaces.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.Interfaces.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.Interfaces",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.IoC.Attributes.RegisterAllAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.IoC.Attributes.RegisterAllAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.IoC.Attributes.RegisterAllAttribute",
      "Summary": "<p sourcefile=\"api/Canister.IoC.Attributes.RegisterAllAttribute.yml\" sourcestartlinenumber=\"1\">This attribute is used to register all items of a specific type with Canister and is used to\nmark a type for registration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.IoC.Attributes.RegisterAttribute.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.IoC.Attributes.RegisterAttribute.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.IoC.Attributes.RegisterAttribute",
      "Summary": "<p sourcefile=\"api/Canister.IoC.Attributes.RegisterAttribute.yml\" sourcestartlinenumber=\"1\">This attribute is used to register a type with Canister and is used to mark a type for registration.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.IoC.Attributes.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.IoC.Attributes.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.IoC.Attributes",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.IoC.ExtensionMethods.HashSetExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.IoC.ExtensionMethods.HashSetExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.IoC.ExtensionMethods.HashSetExtensions",
      "Summary": "<p sourcefile=\"api/Canister.IoC.ExtensionMethods.HashSetExtensions.yml\" sourcestartlinenumber=\"1\">Provides extension methods for <xref href=\"System.Collections.Generic.HashSet%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> to filter\navailable classes and interfaces.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.IoC.ExtensionMethods.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.IoC.ExtensionMethods.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.IoC.ExtensionMethods",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.IoC.Modules.DefaultModule.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.IoC.Modules.DefaultModule.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.IoC.Modules.DefaultModule",
      "Summary": "<p sourcefile=\"api/Canister.IoC.Modules.DefaultModule.yml\" sourcestartlinenumber=\"1\">Default module</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Canister.IoC.Modules.yml",
      "output": {
        ".html": {
          "relative_path": "api/Canister.IoC.Modules.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Canister.IoC.Modules",
      "Summary": null
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionDecoratorExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionDecoratorExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Microsoft.Extensions.DependencyInjection.ServiceCollectionDecoratorExtensions",
      "Summary": "<p sourcefile=\"api/Microsoft.Extensions.DependencyInjection.ServiceCollectionDecoratorExtensions.yml\" sourcestartlinenumber=\"1\">Provides extension methods for decorating registered services.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionDiagnosticsExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionDiagnosticsExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Microsoft.Extensions.DependencyInjection.ServiceCollectionDiagnosticsExtensions",
      "Summary": "<p sourcefile=\"api/Microsoft.Extensions.DependencyInjection.ServiceCollectionDiagnosticsExtensions.yml\" sourcestartlinenumber=\"1\">Provides diagnostic and debugging extension methods for IServiceCollection.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.yml",
      "output": {
        ".html": {
          "relative_path": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions",
      "Summary": "<p sourcefile=\"api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.yml\" sourcestartlinenumber=\"1\">Extension methods for <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\" data-throw-if-not-resolved=\"false\"></xref> to check for the existence of services.</p>\n"
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Microsoft.Extensions.DependencyInjection.yml",
      "output": {
        ".html": {
          "relative_path": "api/Microsoft.Extensions.DependencyInjection.html"
        }
      },
      "version": "",
      "Uid": null,
      "IsMRef": true,
      "Title": "Microsoft.Extensions.DependencyInjection",
      "Summary": null
    },
    {
      "type": "Conceptual",
      "source_relative_path": "api/index.md",
      "output": {
        ".html": {
          "relative_path": "api/index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".json": {
          "relative_path": "api/toc.json"
        },
        ".html": {
          "relative_path": "api/toc.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "articles/intro.md",
      "output": {
        ".html": {
          "relative_path": "articles/intro.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "articles/toc.yml",
      "output": {
        ".json": {
          "relative_path": "articles/toc.json"
        },
        ".html": {
          "relative_path": "articles/toc.html"
        }
      },
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "images/icon.png",
      "output": {
        "resource": {
          "relative_path": "images/icon.png"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".json": {
          "relative_path": "toc.json"
        },
        ".html": {
          "relative_path": "toc.html"
        }
      },
      "version": ""
    }
  ],
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}